
RaspiCLI.c,464
int raspicli_get_command_id(const COMMAND_LIST *commands, const int num_commands, const char *arg, int *num_parameters)raspicli_get_command_id62,2273
void raspicli_display_help(const COMMAND_LIST *commands, const int num_commands)raspicli_display_help98,3044
int raspicli_map_xref(const char *str, const XREF_T *map, int num_refs)raspicli_map_xref122,3628
const char *raspicli_unmap_xref(const int en, XREF_T *map, int num_refs)raspicli_unmap_xref143,4118

RaspiCamControl.c,7112
static XREF_T  exposure_map[] =exposure_map45,2071
static const int exposure_map_size = sizeof(exposure_map) / sizeof(exposure_map[0]);exposure_map_size62,2823
static XREF_T awb_map[] =awb_map65,2992
static const int awb_map_size = sizeof(awb_map) / sizeof(awb_map[0]);awb_map_size79,3522
static XREF_T imagefx_map[] =imagefx_map82,3677
static const int imagefx_map_size = sizeof(imagefx_map) / sizeof(imagefx_map[0]);imagefx_map_size106,4723
static XREF_T metering_mode_map[] =metering_mode_map108,4806
static const int metering_mode_map_size = sizeof(metering_mode_map)/sizeof(metering_mode_map[0]);metering_mode_map_size116,5095
static XREF_T drc_mode_map[] =drc_mode_map118,5194
static const int drc_mode_map_size = sizeof(drc_mode_map)/sizeof(drc_mode_map[0]);drc_mode_map_size126,5454
static XREF_T stereo_mode_map[] =stereo_mode_map128,5538
static const int stereo_mode_map_size = sizeof(stereo_mode_map)/sizeof(stereo_mode_map[0]);stereo_mode_map_size135,5745
#define CommandSharpness CommandSharpness138,5839
#define CommandContrast CommandContrast139,5868
#define CommandBrightness CommandBrightness140,5897
#define CommandSaturation CommandSaturation141,5926
#define CommandISO CommandISO142,5955
#define CommandVideoStab CommandVideoStab143,5984
#define CommandEVComp CommandEVComp144,6013
#define CommandExposure CommandExposure145,6042
#define CommandAWB CommandAWB146,6071
#define CommandImageFX CommandImageFX147,6100
#define CommandColourFX CommandColourFX148,6129
#define CommandMeterMode CommandMeterMode149,6159
#define CommandRotation CommandRotation150,6189
#define CommandHFlip CommandHFlip151,6219
#define CommandVFlip CommandVFlip152,6249
#define CommandROI CommandROI153,6279
#define CommandShutterSpeed CommandShutterSpeed154,6309
#define CommandAwbGains CommandAwbGains155,6340
#define CommandDRCLevel CommandDRCLevel156,6370
#define CommandStatsPass CommandStatsPass157,6400
#define CommandAnnotate CommandAnnotate158,6430
#define CommandStereoMode CommandStereoMode159,6460
#define CommandStereoDecimate CommandStereoDecimate160,6490
#define CommandStereoSwap CommandStereoSwap161,6523
#define CommandAnnotateExtras CommandAnnotateExtras162,6553
static COMMAND_LIST  cmdline_commands[] =cmdline_commands164,6587
static int cmdline_commands_size = sizeof(cmdline_commands) / sizeof(cmdline_commands[0]);cmdline_commands_size193,8776
#define parameter_reset parameter_reset196,8869
static int update_cycle_parameter(int *option, int min, int max, int increment)update_cycle_parameter205,9073
int raspicamcontrol_cycle_test(MMAL_COMPONENT_T *camera)raspicamcontrol_cycle_test238,9857
static MMAL_PARAM_EXPOSUREMODE_T exposure_mode_from_string(const char *str)exposure_mode_from_string430,14647
static MMAL_PARAM_AWBMODE_T awb_mode_from_string(const char *str)awb_mode_from_string446,15134
MMAL_PARAM_IMAGEFX_T imagefx_mode_from_string(const char *str)imagefx_mode_from_string462,15596
static MMAL_PARAM_EXPOSUREMETERINGMODE_T metering_mode_from_string(const char *str)metering_mode_from_string478,16066
static MMAL_PARAMETER_DRC_STRENGTH_T drc_mode_from_string(const char *str)drc_mode_from_string494,16591
static MMAL_STEREOSCOPIC_MODE_T stereo_mode_from_string(const char *str)stereo_mode_from_string510,17094
int raspicamcontrol_parse_cmdline(RASPICAM_CAMERA_PARAMETERS *params, const char *arg1, const char *arg2)raspicamcontrol_parse_cmdline527,17575
void raspicamcontrol_display_help()raspicamcontrol_display_help769,23228
void raspicamcontrol_dump_parameters(const RASPICAM_CAMERA_PARAMETERS *params)raspicamcontrol_dump_parameters821,24509
int mmal_status_to_int(MMAL_STATUS_T status)mmal_status_to_int843,26103
void raspicamcontrol_set_defaults(RASPICAM_CAMERA_PARAMETERS *params)raspicamcontrol_set_defaults877,27681
int raspicamcontrol_get_all_parameters(MMAL_COMPONENT_T *camera, RASPICAM_CAMERA_PARAMETERS *params)raspicamcontrol_get_all_parameters920,29380
int raspicamcontrol_set_all_parameters(MMAL_COMPONENT_T *camera, const RASPICAM_CAMERA_PARAMETERS *params)raspicamcontrol_set_all_parameters951,30669
int raspicamcontrol_set_saturation(MMAL_COMPONENT_T *camera, int saturation)raspicamcontrol_set_saturation989,32831
int raspicamcontrol_set_sharpness(MMAL_COMPONENT_T *camera, int sharpness)raspicamcontrol_set_sharpness1015,33426
int raspicamcontrol_set_contrast(MMAL_COMPONENT_T *camera, int contrast)raspicamcontrol_set_contrast1042,34035
int raspicamcontrol_set_brightness(MMAL_COMPONENT_T *camera, int brightness)raspicamcontrol_set_brightness1069,34686
int raspicamcontrol_set_ISO(MMAL_COMPONENT_T *camera, int ISO)raspicamcontrol_set_ISO1096,35327
int raspicamcontrol_set_metering_mode(MMAL_COMPONENT_T *camera, MMAL_PARAM_EXPOSUREMETERINGMODE_T m_mode )raspicamcontrol_set_metering_mode1114,35921
int raspicamcontrol_set_video_stabilisation(MMAL_COMPONENT_T *camera, int vstabilisation)raspicamcontrol_set_video_stabilisation1131,36548
int raspicamcontrol_set_exposure_compensation(MMAL_COMPONENT_T *camera, int exp_comp)raspicamcontrol_set_exposure_compensation1145,37028
int raspicamcontrol_set_exposure_mode(MMAL_COMPONENT_T *camera, MMAL_PARAM_EXPOSUREMODE_T mode)raspicamcontrol_set_exposure_mode1174,37989
int raspicamcontrol_set_awb_mode(MMAL_COMPONENT_T *camera, MMAL_PARAM_AWBMODE_T awb_mode)raspicamcontrol_set_awb_mode1201,38872
int raspicamcontrol_set_awb_gains(MMAL_COMPONENT_T *camera, float r_gain, float b_gain)raspicamcontrol_set_awb_gains1211,39174
int raspicamcontrol_set_imageFX(MMAL_COMPONENT_T *camera, MMAL_PARAM_IMAGEFX_T imageFX)raspicamcontrol_set_imageFX1256,40700
int raspicamcontrol_set_colourFX(MMAL_COMPONENT_T *camera, const MMAL_PARAM_COLOURFX_T *colourFX)raspicamcontrol_set_colourFX1278,41591
int raspicamcontrol_set_rotation(MMAL_COMPONENT_T *camera, int rotation)raspicamcontrol_set_rotation1300,42249
int raspicamcontrol_set_flips(MMAL_COMPONENT_T *camera, int hflip, int vflip)raspicamcontrol_set_flips1320,42951
int raspicamcontrol_set_ROI(MMAL_COMPONENT_T *camera, PARAM_FLOAT_RECT_T rect)raspicamcontrol_set_ROI1345,43793
int raspicamcontrol_set_shutter_speed(MMAL_COMPONENT_T *camera, int speed)raspicamcontrol_set_shutter_speed1363,44402
int raspicamcontrol_set_DRC(MMAL_COMPONENT_T *camera, MMAL_PARAMETER_DRC_STRENGTH_T strength)raspicamcontrol_set_DRC1382,45017
int raspicamcontrol_set_stats_pass(MMAL_COMPONENT_T *camera, int stats_pass)raspicamcontrol_set_stats_pass1392,45348
int raspicamcontrol_set_annotate(MMAL_COMPONENT_T *camera, const int settings, const char *string,raspicamcontrol_set_annotate1409,45893
int raspicamcontrol_set_stereo_mode(MMAL_PORT_T *port, MMAL_PARAMETER_STEREOSCOPIC_MODE_T *stereo_mode)raspicamcontrol_set_stereo_mode1505,49097
static int raspicamcontrol_get_mem_gpu(void)raspicamcontrol_get_mem_gpu1523,49760
static void raspicamcontrol_get_camera(int *supported, int *detected)raspicamcontrol_get_camera1537,50170
void raspicamcontrol_check_configuration(int min_gpu_mem)raspicamcontrol_check_configuration1554,50766

RaspiPreview.c,983
#define CommandPreview CommandPreview47,2043
#define CommandFullScreen CommandFullScreen48,2075
#define CommandOpacity CommandOpacity49,2107
#define CommandDisablePreview CommandDisablePreview50,2139
static COMMAND_LIST cmdline_commands[] =cmdline_commands52,2172
static int cmdline_commands_size = sizeof(cmdline_commands) / sizeof(cmdline_commands[0]);cmdline_commands_size60,2564
MMAL_STATUS_T raspipreview_create(RASPIPREVIEW_PARAMETERS *state)raspipreview_create70,2831
void raspipreview_destroy(RASPIPREVIEW_PARAMETERS *state)raspipreview_destroy166,5093
void raspipreview_set_defaults(RASPIPREVIEW_PARAMETERS *state)raspipreview_set_defaults181,5420
void raspipreview_dump_parameters(RASPIPREVIEW_PARAMETERS *state)raspipreview_dump_parameters199,5855
int raspipreview_parse_cmdline(RASPIPREVIEW_PARAMETERS *params, const char *arg1, const char *arg2)raspipreview_parse_cmdline215,6440
void raspipreview_display_help()raspipreview_display_help277,8077

RaspiVid.c,11675
#define _GNU_SOURCE_GNU_SOURCE51,2430
#define VERSION_STRING VERSION_STRING64,2648
#define MMAL_CAMERA_PREVIEW_PORT MMAL_CAMERA_PREVIEW_PORT84,3204
#define MMAL_CAMERA_VIDEO_PORT MMAL_CAMERA_VIDEO_PORT85,3239
#define MMAL_CAMERA_CAPTURE_PORT MMAL_CAMERA_CAPTURE_PORT86,3272
#define VIDEO_FRAME_RATE_NUM VIDEO_FRAME_RATE_NUM90,3358
#define VIDEO_FRAME_RATE_DEN VIDEO_FRAME_RATE_DEN91,3390
#define VIDEO_OUTPUT_BUFFERS_NUM VIDEO_OUTPUT_BUFFERS_NUM94,3465
const int MAX_BITRATE_MJPEG = 25000000; // 25Mbits/sMAX_BITRATE_MJPEG97,3539
const int MAX_BITRATE_LEVEL4 = 25000000; // 25Mbits/sMAX_BITRATE_LEVEL498,3592
const int MAX_BITRATE_LEVEL42 = 62500000; // 62.5Mbits/sMAX_BITRATE_LEVEL4299,3646
const int ABORT_INTERVAL = 100; // msABORT_INTERVAL102,3771
#define WAIT_METHOD_NONE WAIT_METHOD_NONE107,3881
#define WAIT_METHOD_TIMED WAIT_METHOD_TIMED109,3974
#define WAIT_METHOD_KEYPRESS WAIT_METHOD_KEYPRESS111,4060
#define WAIT_METHOD_SIGNAL WAIT_METHOD_SIGNAL113,4144
#define WAIT_METHOD_FOREVER WAIT_METHOD_FOREVER115,4204
typedef struct RASPIVID_STATE_S RASPIVID_STATE;RASPIVID_STATE123,4349
   FILE *file_handle;                   /// File handle to write buffer data to.file_handle129,4492
   RASPIVID_STATE *pstate;              /// pointer to our state in case required in callbackpstate130,4573
   int abort;                           /// Set to 1 in callback if an error occurs to attempt to abort the captureabort131,4667
   char *cb_buff;                       /// Circular buffercb_buff132,4783
   int   cb_len;                        /// Length of buffercb_len133,4843
   int   cb_wptr;                       /// Current write pointercb_wptr134,4904
   int   cb_wrap;                       /// Has buffer wrapped at least once?cb_wrap135,4970
   int   cb_data;                       /// Valid bytes in buffercb_data136,5048
#define IFRAME_BUFSIZE IFRAME_BUFSIZE137,5114
   int   iframe_buff[IFRAME_BUFSIZE];          /// buffer of iframe pointersiframe_buff138,5147
   int   iframe_buff_wpos;iframe_buff_wpos139,5224
   int   iframe_buff_rpos;iframe_buff_rpos140,5251
   char  header_bytes[29];header_bytes141,5278
   int  header_wptr;header_wptr142,5305
   FILE *imv_file_handle;               /// File handle to write inline motion vectors to.imv_file_handle143,5326
   int  flush_buffers;flush_buffers144,5417
   FILE *pts_file_handle;               /// File timestampspts_file_handle145,5440
} PORT_USERDATA;PORT_USERDATA146,5500
struct RASPIVID_STATE_SRASPIVID_STATE_S150,5589
   int timeout;                        /// Time taken before frame is grabbed and app then shuts down. Units are millisecondstimeout152,5615
   int width;                          /// Requested width of imagewidth153,5741
   int height;                         /// requested height of imageheight154,5809
   MMAL_FOURCC_T encoding;             /// Requested codec video encoding (MJPEG or H264)encoding155,5878
   int bitrate;                        /// Requested bitratebitrate156,5968
   int framerate;                      /// Requested frame rate (fps)framerate157,6029
   int intraperiod;                    /// Intra-refresh period (key frame rate)intraperiod158,6099
   int quantisationParameter;          /// Quantisation parameter - quality. Set bitrate 0 and set this for variable bitratequantisationParameter159,6180
   int bInlineHeaders;                  /// Insert inline headers to stream (SPS, PPS)bInlineHeaders160,6305
   char *filename;                     /// filename of output filefilename161,6392
   int verbose;                        /// !0 if want detailed run informationverbose162,6459
   int demoMode;                       /// Run app in demo modedemoMode163,6538
   int demoInterval;                   /// Interval between camera settings changesdemoInterval164,6602
   int immutableInput;                 /// Flag to specify whether encoder works in place or creates a new buffer. Result is preview can display eitherimmutableInput165,6686
   int profile;                        /// H264 profile to use for encodingprofile167,6950
   int level;                          /// H264 level to use for encodinglevel168,7026
   int waitMethod;                     /// Method for switching between pause and capturewaitMethod169,7100
   int onTime;                         /// In timed cycle mode, the amount of time the capture is on per cycleonTime171,7191
   int offTime;                        /// In timed cycle mode, the amount of time the capture is off per cycleoffTime172,7302
   int segmentSize;                    /// Segment mode In timed cycle mode, the amount of time the capture is off per cyclesegmentSize174,7415
   int segmentWrap;                    /// Point at which to wrap segment countersegmentWrap175,7540
   int segmentNumber;                  /// Current segment countersegmentNumber176,7622
   int splitNow;                       /// Split at next possible i-frame if set to 1.splitNow177,7689
   int splitWait;                      /// Switch if user wants splited filessplitWait178,7776
   RASPIPREVIEW_PARAMETERS preview_parameters;   /// Preview setup parameterspreview_parameters180,7855
   RASPICAM_CAMERA_PARAMETERS camera_parameters; /// Camera setup parameterscamera_parameters181,7933
   MMAL_COMPONENT_T *camera_component;    /// Pointer to the camera componentcamera_component183,8011
   MMAL_COMPONENT_T *encoder_component;   /// Pointer to the encoder componentencoder_component184,8089
   MMAL_CONNECTION_T *preview_connection; /// Pointer to the connection from camera to previewpreview_connection185,8168
   MMAL_CONNECTION_T *encoder_connection; /// Pointer to the connection from camera to encoderencoder_connection186,8263
   MMAL_POOL_T *encoder_pool; /// Pointer to the pool of buffers used by encoder output portencoder_pool188,8359
   PORT_USERDATA callback_data;        /// Used to move data to the encoder callbackcallback_data190,8453
   int bCapturing;                     /// State of capture/pausebCapturing192,8539
   int bCircularBuffer;                /// Whether we are writing to a circular bufferbCircularBuffer193,8605
   int inlineMotionVectors;             /// Encoder outputs inline Motion VectorsinlineMotionVectors195,8693
   char *imv_filename;                  /// filename of inline Motion Vectors outputimv_filename196,8775
   int cameraNum;                       /// Camera numbercameraNum197,8860
   int settings;                        /// Request settings from the camerasettings198,8918
   int sensor_mode;			            /// Sensor mode. 0=auto. Check docs/forum for modes selected by other values.sensor_mode199,8995
   int intra_refresh_type;              /// What intra refresh type to use. -1 to not set.intra_refresh_type200,9107
   int frame;frame201,9198
   char *pts_file;pts_file202,9212
   int save_pts;save_pts203,9231
   int64_t starttime;starttime204,9248
   int64_t lasttime;lasttime205,9270
static XREF_T  profile_map[] =profile_map210,9388
static int profile_map_size = sizeof(profile_map) / sizeof(profile_map[0]);profile_map_size218,9676
static XREF_T  level_map[] =level_map221,9843
static int level_map_size = sizeof(level_map) / sizeof(level_map[0]);level_map_size228,10015
static XREF_T  initial_map[] =initial_map231,10087
static int initial_map_size = sizeof(initial_map) / sizeof(initial_map[0]);initial_map_size237,10168
static XREF_T  intra_refresh_map[] =intra_refresh_map239,10245
static int intra_refresh_map_size = sizeof(intra_refresh_map) / sizeof(intra_refresh_map[0]);intra_refresh_map_size248,10623
#define CommandHelp CommandHelp254,10839
#define CommandWidth CommandWidth255,10869
#define CommandHeight CommandHeight256,10899
#define CommandBitrate CommandBitrate257,10929
#define CommandOutput CommandOutput258,10959
#define CommandVerbose CommandVerbose259,10989
#define CommandTimeout CommandTimeout260,11019
#define CommandDemoMode CommandDemoMode261,11049
#define CommandFramerate CommandFramerate262,11079
#define CommandPreviewEnc CommandPreviewEnc263,11109
#define CommandIntraPeriod CommandIntraPeriod264,11139
#define CommandProfile CommandProfile265,11170
#define CommandTimed CommandTimed266,11201
#define CommandSignal CommandSignal267,11232
#define CommandKeypress CommandKeypress268,11263
#define CommandInitialState CommandInitialState269,11294
#define CommandQP CommandQP270,11325
#define CommandInlineHeaders CommandInlineHeaders271,11356
#define CommandSegmentFile CommandSegmentFile272,11388
#define CommandSegmentWrap CommandSegmentWrap273,11419
#define CommandSegmentStart CommandSegmentStart274,11450
#define CommandSplitWait CommandSplitWait275,11481
#define CommandCircular CommandCircular276,11512
#define CommandIMV CommandIMV277,11543
#define CommandCamSelect CommandCamSelect278,11574
#define CommandSettings CommandSettings279,11605
#define CommandSensorMode CommandSensorMode280,11636
#define CommandIntraRefreshType CommandIntraRefreshType281,11667
#define CommandFlush CommandFlush282,11702
#define CommandSavePTS CommandSavePTS283,11733
#define CommandCodec CommandCodec284,11764
#define CommandLevel CommandLevel285,11795
static COMMAND_LIST cmdline_commands[] =cmdline_commands287,11827
static int cmdline_commands_size = sizeof(cmdline_commands) / sizeof(cmdline_commands[0]);cmdline_commands_size323,15376
   char *description;description328,15485
   int nextWaitMethod;nextWaitMethod329,15507
} wait_method_description[] =wait_method_description330,15530
static int wait_method_description_size = sizeof(wait_method_description) / sizeof(wait_method_description[0]);wait_method_description_size339,15836
static void default_status(RASPIVID_STATE *state)default_status348,16088
static void dump_status(RASPIVID_STATE *state)dump_status410,17769
static int parse_cmdline(int argc, const char **argv, RASPIVID_STATE *state)parse_cmdline452,19736
static void display_valid_parameters(char *app_name)display_valid_parameters853,29832
static void camera_control_callback(MMAL_PORT_T *port, MMAL_BUFFER_HEADER_T *buffer)camera_control_callback911,31299
static FILE *open_filename(RASPIVID_STATE *pState)open_filename950,32695
static FILE *open_imv_filename(RASPIVID_STATE *pState)open_imv_filename1035,34583
static FILE *open_pts_filename(RASPIVID_STATE *pState)open_pts_filename1068,35308
static void update_annotation_data(RASPIVID_STATE *state)update_annotation_data1104,36116
static void encoder_buffer_callback(MMAL_PORT_T *port, MMAL_BUFFER_HEADER_T *buffer)encoder_buffer_callback1145,37741
static MMAL_STATUS_T create_camera_component(RASPIVID_STATE *state)create_camera_component1370,46072
static void destroy_camera_component(RASPIVID_STATE *state)destroy_camera_component1622,54254
static MMAL_STATUS_T create_encoder_component(RASPIVID_STATE *state)create_encoder_component1639,54629
static void destroy_encoder_component(RASPIVID_STATE *state)destroy_encoder_component1905,63149
static MMAL_STATUS_T connect_ports(MMAL_PORT_T *output_port, MMAL_PORT_T *input_port, MMAL_CONNECTION_T **connection)connect_ports1929,63807
static void check_disable_port(MMAL_PORT_T *port)check_disable_port1951,64415
static void signal_handler(int signal_number)signal_handler1963,64625
static int pause_and_test_abort(RASPIVID_STATE *state, int pause)pause_and_test_abort1987,65230
static int wait_for_next_change(RASPIVID_STATE *state)wait_for_next_change2013,65743
int main(int argc, const char **argv)main2108,67940

cameraUnit.c,11675
#define _GNU_SOURCE_GNU_SOURCE51,2430
#define VERSION_STRING VERSION_STRING64,2648
#define MMAL_CAMERA_PREVIEW_PORT MMAL_CAMERA_PREVIEW_PORT84,3204
#define MMAL_CAMERA_VIDEO_PORT MMAL_CAMERA_VIDEO_PORT85,3239
#define MMAL_CAMERA_CAPTURE_PORT MMAL_CAMERA_CAPTURE_PORT86,3272
#define VIDEO_FRAME_RATE_NUM VIDEO_FRAME_RATE_NUM90,3358
#define VIDEO_FRAME_RATE_DEN VIDEO_FRAME_RATE_DEN91,3390
#define VIDEO_OUTPUT_BUFFERS_NUM VIDEO_OUTPUT_BUFFERS_NUM94,3465
const int MAX_BITRATE_MJPEG = 25000000; // 25Mbits/sMAX_BITRATE_MJPEG97,3539
const int MAX_BITRATE_LEVEL4 = 25000000; // 25Mbits/sMAX_BITRATE_LEVEL498,3592
const int MAX_BITRATE_LEVEL42 = 62500000; // 62.5Mbits/sMAX_BITRATE_LEVEL4299,3646
const int ABORT_INTERVAL = 100; // msABORT_INTERVAL102,3771
#define WAIT_METHOD_NONE WAIT_METHOD_NONE107,3881
#define WAIT_METHOD_TIMED WAIT_METHOD_TIMED109,3974
#define WAIT_METHOD_KEYPRESS WAIT_METHOD_KEYPRESS111,4060
#define WAIT_METHOD_SIGNAL WAIT_METHOD_SIGNAL113,4144
#define WAIT_METHOD_FOREVER WAIT_METHOD_FOREVER115,4204
typedef struct RASPIVID_STATE_S RASPIVID_STATE;RASPIVID_STATE123,4349
   FILE *file_handle;                   /// File handle to write buffer data to.file_handle129,4492
   RASPIVID_STATE *pstate;              /// pointer to our state in case required in callbackpstate130,4573
   int abort;                           /// Set to 1 in callback if an error occurs to attempt to abort the captureabort131,4667
   char *cb_buff;                       /// Circular buffercb_buff132,4783
   int   cb_len;                        /// Length of buffercb_len133,4843
   int   cb_wptr;                       /// Current write pointercb_wptr134,4904
   int   cb_wrap;                       /// Has buffer wrapped at least once?cb_wrap135,4970
   int   cb_data;                       /// Valid bytes in buffercb_data136,5048
#define IFRAME_BUFSIZE IFRAME_BUFSIZE137,5114
   int   iframe_buff[IFRAME_BUFSIZE];          /// buffer of iframe pointersiframe_buff138,5147
   int   iframe_buff_wpos;iframe_buff_wpos139,5224
   int   iframe_buff_rpos;iframe_buff_rpos140,5251
   char  header_bytes[29];header_bytes141,5278
   int  header_wptr;header_wptr142,5305
   FILE *imv_file_handle;               /// File handle to write inline motion vectors to.imv_file_handle143,5326
   int  flush_buffers;flush_buffers144,5417
   FILE *pts_file_handle;               /// File timestampspts_file_handle145,5440
} PORT_USERDATA;PORT_USERDATA146,5500
struct RASPIVID_STATE_SRASPIVID_STATE_S150,5589
   int timeout;                        /// Time taken before frame is grabbed and app then shuts down. Units are millisecondstimeout152,5615
   int width;                          /// Requested width of imagewidth153,5741
   int height;                         /// requested height of imageheight154,5809
   MMAL_FOURCC_T encoding;             /// Requested codec video encoding (MJPEG or H264)encoding155,5878
   int bitrate;                        /// Requested bitratebitrate156,5968
   int framerate;                      /// Requested frame rate (fps)framerate157,6029
   int intraperiod;                    /// Intra-refresh period (key frame rate)intraperiod158,6099
   int quantisationParameter;          /// Quantisation parameter - quality. Set bitrate 0 and set this for variable bitratequantisationParameter159,6180
   int bInlineHeaders;                  /// Insert inline headers to stream (SPS, PPS)bInlineHeaders160,6305
   char *filename;                     /// filename of output filefilename161,6392
   int verbose;                        /// !0 if want detailed run informationverbose162,6459
   int demoMode;                       /// Run app in demo modedemoMode163,6538
   int demoInterval;                   /// Interval between camera settings changesdemoInterval164,6602
   int immutableInput;                 /// Flag to specify whether encoder works in place or creates a new buffer. Result is preview can display eitherimmutableInput165,6686
   int profile;                        /// H264 profile to use for encodingprofile167,6950
   int level;                          /// H264 level to use for encodinglevel168,7026
   int waitMethod;                     /// Method for switching between pause and capturewaitMethod169,7100
   int onTime;                         /// In timed cycle mode, the amount of time the capture is on per cycleonTime171,7191
   int offTime;                        /// In timed cycle mode, the amount of time the capture is off per cycleoffTime172,7302
   int segmentSize;                    /// Segment mode In timed cycle mode, the amount of time the capture is off per cyclesegmentSize174,7415
   int segmentWrap;                    /// Point at which to wrap segment countersegmentWrap175,7540
   int segmentNumber;                  /// Current segment countersegmentNumber176,7622
   int splitNow;                       /// Split at next possible i-frame if set to 1.splitNow177,7689
   int splitWait;                      /// Switch if user wants splited filessplitWait178,7776
   RASPIPREVIEW_PARAMETERS preview_parameters;   /// Preview setup parameterspreview_parameters180,7855
   RASPICAM_CAMERA_PARAMETERS camera_parameters; /// Camera setup parameterscamera_parameters181,7933
   MMAL_COMPONENT_T *camera_component;    /// Pointer to the camera componentcamera_component183,8011
   MMAL_COMPONENT_T *encoder_component;   /// Pointer to the encoder componentencoder_component184,8089
   MMAL_CONNECTION_T *preview_connection; /// Pointer to the connection from camera to previewpreview_connection185,8168
   MMAL_CONNECTION_T *encoder_connection; /// Pointer to the connection from camera to encoderencoder_connection186,8263
   MMAL_POOL_T *encoder_pool; /// Pointer to the pool of buffers used by encoder output portencoder_pool188,8359
   PORT_USERDATA callback_data;        /// Used to move data to the encoder callbackcallback_data190,8453
   int bCapturing;                     /// State of capture/pausebCapturing192,8539
   int bCircularBuffer;                /// Whether we are writing to a circular bufferbCircularBuffer193,8605
   int inlineMotionVectors;             /// Encoder outputs inline Motion VectorsinlineMotionVectors195,8693
   char *imv_filename;                  /// filename of inline Motion Vectors outputimv_filename196,8775
   int cameraNum;                       /// Camera numbercameraNum197,8860
   int settings;                        /// Request settings from the camerasettings198,8918
   int sensor_mode;			            /// Sensor mode. 0=auto. Check docs/forum for modes selected by other values.sensor_mode199,8995
   int intra_refresh_type;              /// What intra refresh type to use. -1 to not set.intra_refresh_type200,9107
   int frame;frame201,9198
   char *pts_file;pts_file202,9212
   int save_pts;save_pts203,9231
   int64_t starttime;starttime204,9248
   int64_t lasttime;lasttime205,9270
static XREF_T  profile_map[] =profile_map210,9388
static int profile_map_size = sizeof(profile_map) / sizeof(profile_map[0]);profile_map_size218,9676
static XREF_T  level_map[] =level_map221,9843
static int level_map_size = sizeof(level_map) / sizeof(level_map[0]);level_map_size228,10015
static XREF_T  initial_map[] =initial_map231,10087
static int initial_map_size = sizeof(initial_map) / sizeof(initial_map[0]);initial_map_size237,10168
static XREF_T  intra_refresh_map[] =intra_refresh_map239,10245
static int intra_refresh_map_size = sizeof(intra_refresh_map) / sizeof(intra_refresh_map[0]);intra_refresh_map_size248,10623
#define CommandHelp CommandHelp254,10839
#define CommandWidth CommandWidth255,10869
#define CommandHeight CommandHeight256,10899
#define CommandBitrate CommandBitrate257,10929
#define CommandOutput CommandOutput258,10959
#define CommandVerbose CommandVerbose259,10989
#define CommandTimeout CommandTimeout260,11019
#define CommandDemoMode CommandDemoMode261,11049
#define CommandFramerate CommandFramerate262,11079
#define CommandPreviewEnc CommandPreviewEnc263,11109
#define CommandIntraPeriod CommandIntraPeriod264,11139
#define CommandProfile CommandProfile265,11170
#define CommandTimed CommandTimed266,11201
#define CommandSignal CommandSignal267,11232
#define CommandKeypress CommandKeypress268,11263
#define CommandInitialState CommandInitialState269,11294
#define CommandQP CommandQP270,11325
#define CommandInlineHeaders CommandInlineHeaders271,11356
#define CommandSegmentFile CommandSegmentFile272,11388
#define CommandSegmentWrap CommandSegmentWrap273,11419
#define CommandSegmentStart CommandSegmentStart274,11450
#define CommandSplitWait CommandSplitWait275,11481
#define CommandCircular CommandCircular276,11512
#define CommandIMV CommandIMV277,11543
#define CommandCamSelect CommandCamSelect278,11574
#define CommandSettings CommandSettings279,11605
#define CommandSensorMode CommandSensorMode280,11636
#define CommandIntraRefreshType CommandIntraRefreshType281,11667
#define CommandFlush CommandFlush282,11702
#define CommandSavePTS CommandSavePTS283,11733
#define CommandCodec CommandCodec284,11764
#define CommandLevel CommandLevel285,11795
static COMMAND_LIST cmdline_commands[] =cmdline_commands287,11827
static int cmdline_commands_size = sizeof(cmdline_commands) / sizeof(cmdline_commands[0]);cmdline_commands_size323,15376
   char *description;description328,15485
   int nextWaitMethod;nextWaitMethod329,15507
} wait_method_description[] =wait_method_description330,15530
static int wait_method_description_size = sizeof(wait_method_description) / sizeof(wait_method_description[0]);wait_method_description_size339,15836
static void default_status(RASPIVID_STATE *state)default_status348,16088
static void dump_status(RASPIVID_STATE *state)dump_status410,17769
static int parse_cmdline(int argc, const char **argv, RASPIVID_STATE *state)parse_cmdline452,19736
static void display_valid_parameters(char *app_name)display_valid_parameters853,29832
static void camera_control_callback(MMAL_PORT_T *port, MMAL_BUFFER_HEADER_T *buffer)camera_control_callback911,31299
static FILE *open_filename(RASPIVID_STATE *pState)open_filename950,32695
static FILE *open_imv_filename(RASPIVID_STATE *pState)open_imv_filename1035,34583
static FILE *open_pts_filename(RASPIVID_STATE *pState)open_pts_filename1068,35308
static void update_annotation_data(RASPIVID_STATE *state)update_annotation_data1104,36116
static void encoder_buffer_callback(MMAL_PORT_T *port, MMAL_BUFFER_HEADER_T *buffer)encoder_buffer_callback1145,37741
static MMAL_STATUS_T create_camera_component(RASPIVID_STATE *state)create_camera_component1370,46072
static void destroy_camera_component(RASPIVID_STATE *state)destroy_camera_component1622,54254
static MMAL_STATUS_T create_encoder_component(RASPIVID_STATE *state)create_encoder_component1639,54629
static void destroy_encoder_component(RASPIVID_STATE *state)destroy_encoder_component1905,63149
static MMAL_STATUS_T connect_ports(MMAL_PORT_T *output_port, MMAL_PORT_T *input_port, MMAL_CONNECTION_T **connection)connect_ports1929,63807
static void check_disable_port(MMAL_PORT_T *port)check_disable_port1951,64415
static void signal_handler(int signal_number)signal_handler1963,64625
static int pause_and_test_abort(RASPIVID_STATE *state, int pause)pause_and_test_abort1987,65230
static int wait_for_next_change(RASPIVID_STATE *state)wait_for_next_change2013,65743
int main(int argc, const char **argv)main2108,67940

RaspiCLI.h,365
#define RASPICLI_H_RASPICLI_H_30,1586
   int id;id34,1624
   char *command;command35,1635
   char *abbrev;abbrev36,1653
   char *help;help37,1670
   int num_parameters;num_parameters38,1685
} COMMAND_LIST;COMMAND_LIST39,1708
typedef struct xref_txref_t42,1784
   char *mode;mode44,1808
   int mmal_mode;mmal_mode45,1823
} XREF_T;XREF_T46,1841

RaspiCamControl.h,3961
#define RASPICAMCONTROL_H_RASPICAMCONTROL_H_30,1593
#define ANNOTATE_USER_TEXT ANNOTATE_USER_TEXT90,3687
#define ANNOTATE_APP_TEXT ANNOTATE_APP_TEXT92,3763
#define ANNOTATE_DATE_TEXT ANNOTATE_DATE_TEXT94,3825
#define ANNOTATE_TIME_TEXT ANNOTATE_TIME_TEXT96,3886
#define ANNOTATE_SHUTTER_SETTINGS ANNOTATE_SHUTTER_SETTINGS98,3925
#define ANNOTATE_CAF_SETTINGS ANNOTATE_CAF_SETTINGS99,3964
#define ANNOTATE_GAIN_SETTINGS ANNOTATE_GAIN_SETTINGS100,4003
#define ANNOTATE_LENS_SETTINGS ANNOTATE_LENS_SETTINGS101,4042
#define ANNOTATE_MOTION_SETTINGS ANNOTATE_MOTION_SETTINGS102,4082
#define ANNOTATE_FRAME_NUMBER ANNOTATE_FRAME_NUMBER103,4122
#define ANNOTATE_BLACK_BACKGROUND ANNOTATE_BLACK_BACKGROUND104,4162
typedef struct mmal_param_colourfx_smmal_param_colourfx_s108,4277
   int enable;       /// Turn colourFX on or offenable110,4316
   int u,v;          /// U and V to useu111,4365
   int u,v;          /// U and V to usev111,4365
} MMAL_PARAM_COLOURFX_T;MMAL_PARAM_COLOURFX_T112,4405
typedef struct mmal_param_thumbnail_config_smmal_param_thumbnail_config_s114,4431
   int enable;enable116,4478
   int width,height;width117,4493
   int width,height;height117,4493
   int quality;quality118,4514
} MMAL_PARAM_THUMBNAIL_CONFIG_T;MMAL_PARAM_THUMBNAIL_CONFIG_T119,4530
typedef struct param_float_rect_sparam_float_rect_s121,4564
   double x;x123,4600
   double y;y124,4613
   double w;w125,4626
   double h;h126,4639
} PARAM_FLOAT_RECT_T;PARAM_FLOAT_RECT_T127,4652
typedef struct raspicam_camera_parameters_sraspicam_camera_parameters_s130,4710
   int sharpness;             /// -100 to 100sharpness132,4756
   int contrast;              /// -100 to 100contrast133,4802
   int brightness;            ///  0 to 100brightness134,4848
   int saturation;            ///  -100 to 100saturation135,4892
   int ISO;                   ///  TODO : what range?ISO136,4939
   int videoStabilisation;    /// 0 or 1 (false or true)videoStabilisation137,4993
   int exposureCompensation;  /// -10 to +10 ?exposureCompensation138,5050
   MMAL_PARAM_EXPOSUREMODE_T exposureMode;exposureMode139,5097
   MMAL_PARAM_EXPOSUREMETERINGMODE_T exposureMeterMode;exposureMeterMode140,5140
   MMAL_PARAM_AWBMODE_T awbMode;awbMode141,5196
   MMAL_PARAM_IMAGEFX_T imageEffect;imageEffect142,5229
   MMAL_PARAMETER_IMAGEFX_PARAMETERS_T imageEffectsParameters;imageEffectsParameters143,5266
   MMAL_PARAM_COLOURFX_T colourEffects;colourEffects144,5329
   int rotation;              /// 0-359rotation145,5369
   int hflip;                 /// 0 or 1hflip146,5409
   int vflip;                 /// 0 or 1vflip147,5450
   PARAM_FLOAT_RECT_T  roi;   /// region of interest to use on the sensor. Normalised [0,1] values in the rectroi148,5491
   int shutter_speed;         /// 0 = auto, otherwise the shutter speed in msshutter_speed149,5602
   float awb_gains_r;         /// AWB red gainawb_gains_r150,5680
   float awb_gains_b;         /// AWB blue gainawb_gains_b151,5727
   MMAL_PARAMETER_DRC_STRENGTH_T drc_level;  // Strength of Dynamic Range compression to applydrc_level152,5775
   MMAL_BOOL_T stats_pass;    /// Stills capture statistics pass on/offstats_pass153,5870
   int enable_annotate;       /// Flag to enable the annotate, 0 = disabled, otherwise a bitmask of what needs to be displayedenable_annotate154,5942
   char annotate_string[MMAL_CAMERA_ANNOTATE_MAX_TEXT_LEN_V2]; /// String to use for annotate - overrides certain bitmask settingsannotate_string155,6069
   int annotate_text_size;    // Text size for annotationannotate_text_size156,6200
   int annotate_text_colour;  // Text colour for annotationannotate_text_colour157,6258
   int annotate_bg_colour;    // Background colour for annotationannotate_bg_colour158,6318
   MMAL_PARAMETER_STEREOSCOPIC_MODE_T stereo_mode;stereo_mode159,6384
} RASPICAM_CAMERA_PARAMETERS;RASPICAM_CAMERA_PARAMETERS160,6435

RaspiPreview.h,1415
#define RASPIPREVIEW_H_RASPIPREVIEW_H_30,1590
#define PREVIEW_LAYER PREVIEW_LAYER33,1668
#define PREVIEW_FRAME_RATE_NUM PREVIEW_FRAME_RATE_NUM36,1787
#define PREVIEW_FRAME_RATE_DEN PREVIEW_FRAME_RATE_DEN37,1820
#define FULL_RES_PREVIEW_FRAME_RATE_NUM FULL_RES_PREVIEW_FRAME_RATE_NUM39,1854
#define FULL_RES_PREVIEW_FRAME_RATE_DEN FULL_RES_PREVIEW_FRAME_RATE_DEN40,1896
#define FULL_FOV_PREVIEW_16x9_X FULL_FOV_PREVIEW_16x9_X42,1939
#define FULL_FOV_PREVIEW_16x9_Y FULL_FOV_PREVIEW_16x9_Y43,1976
#define FULL_FOV_PREVIEW_4x3_X FULL_FOV_PREVIEW_4x3_X45,2013
#define FULL_FOV_PREVIEW_4x3_Y FULL_FOV_PREVIEW_4x3_Y46,2049
#define FULL_FOV_PREVIEW_FRAME_RATE_NUM FULL_FOV_PREVIEW_FRAME_RATE_NUM48,2085
#define FULL_FOV_PREVIEW_FRAME_RATE_DEN FULL_FOV_PREVIEW_FRAME_RATE_DEN49,2127
   int wantPreview;                       /// Display a previewwantPreview53,2187
   int wantFullScreenPreview;             /// 0 is use previewRect, non-zero to use full screenwantFullScreenPreview54,2251
   int opacity;                           /// Opacity of window - 0 = transparent, 255 = opaqueopacity55,2347
   MMAL_RECT_T previewWindow;             /// Destination rectangle for the preview window.previewWindow56,2443
   MMAL_COMPONENT_T *preview_component;   /// Pointer to the created preview display componentpreview_component57,2535
} RASPIPREVIEW_PARAMETERS;RASPIPREVIEW_PARAMETERS58,2630
